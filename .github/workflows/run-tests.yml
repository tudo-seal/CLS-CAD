name: Run Tests
on:
  workflow_call:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Run Tests
    defaults:
      run:
        working-directory: applications/cls-cad-backend
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Install dependencies
        run: touch cls_cad_backend/database/container
      - name: Test with pytest
        run: poetry run pytest --junit-xml=report.xml --cov=. --cov-report=xml
      - name: Comment Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: github.event_name == 'pull_request'
        with:
          files: |
            ./applications/cls-cad-backend/report.xml
      - name: Comment with coverage
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: ./applications/cls-cad-backend/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'pull_request'
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
          working-directory: applications/cls-cad-backend
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
